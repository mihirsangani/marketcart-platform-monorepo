version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: marketcart-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: marketcart
      POSTGRES_USER: marketcart_user
      POSTGRES_PASSWORD: marketcart_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - marketcart-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U marketcart_user -d marketcart"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
    container_name: marketcart-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://marketcart_user:marketcart_password@postgres:5432/marketcart
      PORT: 4000
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - marketcart-network
    volumes:
      - ./services/backend/prisma:/app/prisma
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        npx prisma migrate deploy &&
        npx prisma generate &&
        npm start
      "

  # Frontend Next.js Service
  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    container_name: marketcart-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_BASE: http://localhost:4000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - marketcart-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: marketcart-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - marketcart-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: marketcart-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - marketcart-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  marketcart-network:
    driver: bridge
